// Generated by view binder compiler. Do not edit!
package com.todo.list.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.todo.list.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddTaskBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnAdd;

  @NonNull
  public final AppCompatButton btnCancel;

  @NonNull
  public final TextInputEditText etTaskTime;

  @NonNull
  public final TextInputEditText etTaskTitle;

  @NonNull
  public final TextInputLayout tilSelectDateTime;

  @NonNull
  public final TextInputLayout tilTaskTitle;

  @NonNull
  public final LayoutToolbarBinding toolbarAddTask;

  private ActivityAddTaskBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnAdd, @NonNull AppCompatButton btnCancel,
      @NonNull TextInputEditText etTaskTime, @NonNull TextInputEditText etTaskTitle,
      @NonNull TextInputLayout tilSelectDateTime, @NonNull TextInputLayout tilTaskTitle,
      @NonNull LayoutToolbarBinding toolbarAddTask) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.btnCancel = btnCancel;
    this.etTaskTime = etTaskTime;
    this.etTaskTitle = etTaskTitle;
    this.tilSelectDateTime = tilSelectDateTime;
    this.tilTaskTitle = tilTaskTitle;
    this.toolbarAddTask = toolbarAddTask;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAdd;
      AppCompatButton btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      AppCompatButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.etTaskTime;
      TextInputEditText etTaskTime = ViewBindings.findChildViewById(rootView, id);
      if (etTaskTime == null) {
        break missingId;
      }

      id = R.id.etTaskTitle;
      TextInputEditText etTaskTitle = ViewBindings.findChildViewById(rootView, id);
      if (etTaskTitle == null) {
        break missingId;
      }

      id = R.id.tilSelectDateTime;
      TextInputLayout tilSelectDateTime = ViewBindings.findChildViewById(rootView, id);
      if (tilSelectDateTime == null) {
        break missingId;
      }

      id = R.id.tilTaskTitle;
      TextInputLayout tilTaskTitle = ViewBindings.findChildViewById(rootView, id);
      if (tilTaskTitle == null) {
        break missingId;
      }

      id = R.id.toolbarAddTask;
      View toolbarAddTask = ViewBindings.findChildViewById(rootView, id);
      if (toolbarAddTask == null) {
        break missingId;
      }
      LayoutToolbarBinding binding_toolbarAddTask = LayoutToolbarBinding.bind(toolbarAddTask);

      return new ActivityAddTaskBinding((ConstraintLayout) rootView, btnAdd, btnCancel, etTaskTime,
          etTaskTitle, tilSelectDateTime, tilTaskTitle, binding_toolbarAddTask);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
