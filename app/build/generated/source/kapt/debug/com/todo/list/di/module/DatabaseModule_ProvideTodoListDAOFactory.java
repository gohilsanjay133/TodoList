// Generated by Dagger (https://dagger.dev).
package com.todo.list.di.module;

import com.todo.list.data.db.TodoListDatabase;
import com.todo.list.data.db.dao.TodoListDAO;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideTodoListDAOFactory implements Factory<TodoListDAO> {
  private final DatabaseModule module;

  private final Provider<TodoListDatabase> todoListDatabaseProvider;

  public DatabaseModule_ProvideTodoListDAOFactory(DatabaseModule module,
      Provider<TodoListDatabase> todoListDatabaseProvider) {
    this.module = module;
    this.todoListDatabaseProvider = todoListDatabaseProvider;
  }

  @Override
  public TodoListDAO get() {
    return provideTodoListDAO(module, todoListDatabaseProvider.get());
  }

  public static DatabaseModule_ProvideTodoListDAOFactory create(DatabaseModule module,
      Provider<TodoListDatabase> todoListDatabaseProvider) {
    return new DatabaseModule_ProvideTodoListDAOFactory(module, todoListDatabaseProvider);
  }

  public static TodoListDAO provideTodoListDAO(DatabaseModule instance,
      TodoListDatabase todoListDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.provideTodoListDAO(todoListDatabase));
  }
}
